generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_logininfor {
  infoId     Int       @id @default(autoincrement()) @map("info_id")
  userName   String?   @default("") @map("user_name") @db.VarChar(50)
  ipAddr     String?   @default("") @map("ipaddr") @db.VarChar(128)
  status     String?   @default("0") @db.Char(1)
  msg        String?   @default("") @db.VarChar(255)
  ua         String?   @default("") @db.VarChar(255)
  accessTime DateTime? @map("access_time") @db.DateTime(0)

  @@index([accessTime], map: "idx_sys_logininfor_lt")
  @@index([status], map: "idx_sys_logininfor_s")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_role {
  roleId            Int       @id @default(autoincrement()) @map("role_id")
  roleName          String    @map("role_name") @db.VarChar(30)
  roleKey           String    @map("role_key") @db.VarChar(100)
  roleSort          Int       @map("role_sort")
  dataScope         String?   @default("1") @map("data_scope") @db.Char(1)
  menuCheckStrictly Boolean?  @default(true) @map("menu_check_strictly")
  deptCheckStrictly Boolean?  @default(true) @map("dept_check_strictly")
  status            String    @db.Char(1)
  delFlag           String?   @default("0") @map("del_flag") @db.Char(1)
  createBy          String?   @default("") @map("create_by") @db.VarChar(64)
  createTime        DateTime? @map("create_time") @db.DateTime(0)
  updateBy          String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime        DateTime? @map("update_time") @db.DateTime(0)
  remark            String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_role_menu {
  roleId Int @map("role_id")
  menuId Int @map("menu_id")

  @@id([roleId, menuId])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user {
  userId      Int       @id @default(autoincrement()) @map("user_id")
  deptId      Int?      @map("dept_id")
  userName    String    @map("user_name") @db.VarChar(30)
  nickName    String    @map("nick_name") @db.VarChar(30)
  userType    String?   @default("00") @map("user_type") @db.VarChar(2)
  email       String?   @default("") @db.VarChar(50)
  phoneNumber String?   @default("") @map("phonenumber") @db.VarChar(11)
  sex         String?   @default("0") @db.Char(1)
  avatar      String?   @default("") @db.VarChar(100)
  password    String?   @default("") @db.VarChar(100)
  status      String?   @default("0") @db.Char(1)
  delFlag     String?   @default("0") @map("del_flag") @db.Char(1)
  loginIp     String?   @default("") @map("login_ip") @db.VarChar(128)
  loginDate   DateTime? @map("login_date") @db.DateTime(0)
  createBy    String?   @default("") @map("create_by") @db.VarChar(64)
  createTime  DateTime? @map("create_time") @db.DateTime(0)
  updateBy    String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime  DateTime? @map("update_time") @db.DateTime(0)
  remark      String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_dept {
  deptId     Int       @id @default(autoincrement()) @map("dept_id")
  parentId   Int?      @default(0) @map("parent_id")
  ancestors  String?   @default("") @db.VarChar(50)
  deptName   String?   @default("") @map("dept_name") @db.VarChar(30)
  orderNum   Int?      @default(0) @map("order_num")
  leader     String?   @db.VarChar(20)
  phone      String?   @db.VarChar(11)
  email      String?   @db.VarChar(50)
  status     String?   @default("0") @db.Char(1)
  delFlag    String?   @default("0") @map("del_flag") @db.Char(1)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_post {
  postId     Int       @id @default(autoincrement()) @map("post_id")
  postCode   String    @map("post_code") @db.VarChar(64)
  postName   String    @map("post_name") @db.VarChar(50)
  postSort   Int       @map("post_sort")
  status     String    @db.Char(1)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @db.VarChar(500)
  delFlag    String?   @default("0") @map("del_flag") @db.Char(1)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_role_dept {
  roleId Int @map("role_id")
  deptId Int @map("dept_id")

  @@id([roleId, deptId])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user_post {
  userId Int @map("user_id")
  postId Int @map("post_id")

  @@id([userId, postId])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user_role {
  userId Int @map("user_id")
  roleId Int @map("role_id")

  @@id([userId, roleId])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_menu {
  menuId     Int       @id @default(autoincrement()) @map("menu_id")
  menuName   String    @map("menu_name") @db.VarChar(50)
  menuKey    String?   @default("") @map("menu_key") @db.VarChar(50)
  parentId   Int?      @default(0) @map("parent_id")
  orderNum   Int?      @default(0) @map("order_num")
  path       String?   @default("") @db.VarChar(200)
  component  String?   @db.VarChar(255)
  query      String?   @db.VarChar(255)
  isFrame    Int?      @default(1) @map("is_frame")
  isCache    Int?      @default(0) @map("is_cache")
  menuType   String?   @default("") @map("menu_type") @db.Char(1)
  visible    Int?      @default(0)
  status     Int?      @default(0)
  perms      String?   @db.VarChar(100)
  icon       String?   @default("#") @db.VarChar(100)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @default("") @db.VarChar(500)
  delFlag    String?   @default("0") @map("del_flag") @db.Char(1)
}
